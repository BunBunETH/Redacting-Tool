{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api/v1';\nexport const login = async (username, password) => {\n  try {\n    const params = new URLSearchParams();\n    params.append('username', username);\n    params.append('password', password);\n    const response = await axios.post(`${API_URL}/auth/login`, params, {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    });\n    if (response.data.access_token) {\n      localStorage.setItem('user', JSON.stringify(response.data));\n    }\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      if (error.response.status === 422) {\n        throw new Error('Invalid username or password format');\n      } else if (error.response.status === 401) {\n        throw new Error('Invalid credentials');\n      } else {\n        throw new Error('Login failed. Please try again.');\n      }\n    } else if (error.request) {\n      // The request was made but no response was received\n      throw new Error('No response from server. Please try again.');\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      throw new Error('Error setting up request. Please try again.');\n    }\n  }\n};\nexport const logout = () => {\n  localStorage.removeItem('user');\n};\nexport const getCurrentUser = () => {\n  return JSON.parse(localStorage.getItem('user'));\n};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","login","username","password","params","URLSearchParams","append","response","post","headers","data","access_token","localStorage","setItem","JSON","stringify","error","status","Error","request","logout","removeItem","getCurrentUser","parse","getItem"],"sources":["/Users/talalutarazvan/Strac2/frontend/src/services/auth.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api/v1';\n\nexport const login = async (username, password) => {\n    try {\n        const params = new URLSearchParams();\n        params.append('username', username);\n        params.append('password', password);\n        \n        const response = await axios.post(`${API_URL}/auth/login`, params, {\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n            }\n        });\n        \n        if (response.data.access_token) {\n            localStorage.setItem('user', JSON.stringify(response.data));\n        }\n        \n        return response.data;\n    } catch (error) {\n        if (error.response) {\n            // The request was made and the server responded with a status code\n            // that falls out of the range of 2xx\n            if (error.response.status === 422) {\n                throw new Error('Invalid username or password format');\n            } else if (error.response.status === 401) {\n                throw new Error('Invalid credentials');\n            } else {\n                throw new Error('Login failed. Please try again.');\n            }\n        } else if (error.request) {\n            // The request was made but no response was received\n            throw new Error('No response from server. Please try again.');\n        } else {\n            // Something happened in setting up the request that triggered an Error\n            throw new Error('Error setting up request. Please try again.');\n        }\n    }\n};\n\nexport const logout = () => {\n    localStorage.removeItem('user');\n};\n\nexport const getCurrentUser = () => {\n    return JSON.parse(localStorage.getItem('user'));\n}; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,8BAA8B;AAE/E,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EAC/C,IAAI;IACA,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAAC,CAAC;IACpCD,MAAM,CAACE,MAAM,CAAC,UAAU,EAAEJ,QAAQ,CAAC;IACnCE,MAAM,CAACE,MAAM,CAAC,UAAU,EAAEH,QAAQ,CAAC;IAEnC,MAAMI,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAC,GAAGX,OAAO,aAAa,EAAEO,MAAM,EAAE;MAC/DK,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IAEF,IAAIF,QAAQ,CAACG,IAAI,CAACC,YAAY,EAAE;MAC5BC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACR,QAAQ,CAACG,IAAI,CAAC,CAAC;IAC/D;IAEA,OAAOH,QAAQ,CAACG,IAAI;EACxB,CAAC,CAAC,OAAOM,KAAK,EAAE;IACZ,IAAIA,KAAK,CAACT,QAAQ,EAAE;MAChB;MACA;MACA,IAAIS,KAAK,CAACT,QAAQ,CAACU,MAAM,KAAK,GAAG,EAAE;QAC/B,MAAM,IAAIC,KAAK,CAAC,qCAAqC,CAAC;MAC1D,CAAC,MAAM,IAAIF,KAAK,CAACT,QAAQ,CAACU,MAAM,KAAK,GAAG,EAAE;QACtC,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;MAC1C,CAAC,MAAM;QACH,MAAM,IAAIA,KAAK,CAAC,iCAAiC,CAAC;MACtD;IACJ,CAAC,MAAM,IAAIF,KAAK,CAACG,OAAO,EAAE;MACtB;MACA,MAAM,IAAID,KAAK,CAAC,4CAA4C,CAAC;IACjE,CAAC,MAAM;MACH;MACA,MAAM,IAAIA,KAAK,CAAC,6CAA6C,CAAC;IAClE;EACJ;AACJ,CAAC;AAED,OAAO,MAAME,MAAM,GAAGA,CAAA,KAAM;EACxBR,YAAY,CAACS,UAAU,CAAC,MAAM,CAAC;AACnC,CAAC;AAED,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAChC,OAAOR,IAAI,CAACS,KAAK,CAACX,YAAY,CAACY,OAAO,CAAC,MAAM,CAAC,CAAC;AACnD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}