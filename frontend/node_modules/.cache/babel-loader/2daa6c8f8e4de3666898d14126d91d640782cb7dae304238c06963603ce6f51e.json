{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\nconst api = axios.create({\n  baseURL: API_URL\n});\n\n// Add a request interceptor to add the auth token to requests\napi.interceptors.request.use(config => {\n  // Remove any existing /api/v1 prefix to prevent duplication\n  let url = config.url.replace(/^\\/?(api\\/v1\\/?)+/, '');\n\n  // Add api/v1 prefix if not present\n  if (!url.startsWith('/')) {\n    url = '/' + url;\n  }\n  config.url = '/api/v1' + url;\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Vault endpoints\nexport const getVaultEntries = (page = 1, limit = 10) => api.get(`/mock/vault/mock?page=${page}&limit=${limit}`);\nexport const getVaultEntry = id => api.get(`/mock/vault/entries/${id}`);\nexport const archiveVaultEntry = id => api.post(`/mock/vault/entries/${id}/archive`);\nexport const addVaultFeedback = (id, feedback) => api.post(`/mock/vault/entries/${id}/feedback`, feedback);\nexport const revertRedaction = id => api.post(`/mock/vault/revert/${id}`);\nexport default api;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","interceptors","request","use","config","url","replace","startsWith","token","localStorage","getItem","headers","Authorization","error","Promise","reject","getVaultEntries","page","limit","get","getVaultEntry","id","archiveVaultEntry","post","addVaultFeedback","feedback","revertRedaction"],"sources":["/Users/talalutarazvan/Strac2/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\nconst api = axios.create({\n  baseURL: API_URL,\n});\n\n// Add a request interceptor to add the auth token to requests\napi.interceptors.request.use(\n  (config) => {\n    // Remove any existing /api/v1 prefix to prevent duplication\n    let url = config.url.replace(/^\\/?(api\\/v1\\/?)+/, '');\n    \n    // Add api/v1 prefix if not present\n    if (!url.startsWith('/')) {\n      url = '/' + url;\n    }\n    config.url = '/api/v1' + url;\n    \n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Vault endpoints\nexport const getVaultEntries = (page = 1, limit = 10) => api.get(`/mock/vault/mock?page=${page}&limit=${limit}`);\nexport const getVaultEntry = (id) => api.get(`/mock/vault/entries/${id}`);\nexport const archiveVaultEntry = (id) => api.post(`/mock/vault/entries/${id}/archive`);\nexport const addVaultFeedback = (id, feedback) => api.post(`/mock/vault/entries/${id}/feedback`, feedback);\nexport const revertRedaction = (id) => api.post(`/mock/vault/revert/${id}`);\n\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAExE,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN;AACX,CAAC,CAAC;;AAEF;AACAI,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV;EACA,IAAIC,GAAG,GAAGD,MAAM,CAACC,GAAG,CAACC,OAAO,CAAC,mBAAmB,EAAE,EAAE,CAAC;;EAErD;EACA,IAAI,CAACD,GAAG,CAACE,UAAU,CAAC,GAAG,CAAC,EAAE;IACxBF,GAAG,GAAG,GAAG,GAAGA,GAAG;EACjB;EACAD,MAAM,CAACC,GAAG,GAAG,SAAS,GAAGA,GAAG;EAE5B,MAAMG,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTJ,MAAM,CAACO,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOJ,MAAM;AACf,CAAC,EACAS,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMG,eAAe,GAAGA,CAACC,IAAI,GAAG,CAAC,EAAEC,KAAK,GAAG,EAAE,KAAKpB,GAAG,CAACqB,GAAG,CAAC,yBAAyBF,IAAI,UAAUC,KAAK,EAAE,CAAC;AAChH,OAAO,MAAME,aAAa,GAAIC,EAAE,IAAKvB,GAAG,CAACqB,GAAG,CAAC,uBAAuBE,EAAE,EAAE,CAAC;AACzE,OAAO,MAAMC,iBAAiB,GAAID,EAAE,IAAKvB,GAAG,CAACyB,IAAI,CAAC,uBAAuBF,EAAE,UAAU,CAAC;AACtF,OAAO,MAAMG,gBAAgB,GAAGA,CAACH,EAAE,EAAEI,QAAQ,KAAK3B,GAAG,CAACyB,IAAI,CAAC,uBAAuBF,EAAE,WAAW,EAAEI,QAAQ,CAAC;AAC1G,OAAO,MAAMC,eAAe,GAAIL,EAAE,IAAKvB,GAAG,CAACyB,IAAI,CAAC,sBAAsBF,EAAE,EAAE,CAAC;AAE3E,eAAevB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}